{"version":3,"sources":["components/form/Label.module.scss","utils/document.js","components/form/Label.js","components/form/fields/helpers.js","components/form/fields/CardNumberField.js","components/form/Field.js","components/form/constants.js","containers/checkout-form/fields.js","containers/checkout-form/Checkout.js","App.js","serviceWorker.js","index.js","components/form/fields/CardNumberField.module.scss","containers/checkout-form/Checkout.module.scss"],"names":["module","exports","setCursor","element","position","setSelectionRange","React","memo","children","props","className","classes","label","normalizeAndSlice","value","maxLength","removedSpaces","replace","substr","length","CardNumberField","name","config","validation","error","control","register","getValues","setValue","inputs","useMemo","size","Array","map","_","index","id","generateInputs","getRef","useCallback","fieldsRef","current","ref","focusField","focus","changeValue","selectionStart","shouldValidate","document","activeElement","formatInput","cursorPosition","normalizedValue","rest","removeChar","removeFirstChar","newValue","handleKeyDown","event","key","setTimeout","preventDefault","selectionEnd","handleChange","target","handlePaste","htmlFor","type","autoComplete","cx","input","valid","onKeyDown","onChange","onPaste","Field","fields","required","minLength","pattern","Checkout","useForm","mode","handleSubmit","errors","formState","reset","container","form","onSubmit","data","console","log","cardnumber","join","role","aria-label","button","disabled","isValid","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9ba3b7e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__22e0I\"};","export const setCursor = (element, position = 0) => {\n  if (element) {\n    element.setSelectionRange(position, position);\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./Label.module.scss\";\n\nfunction Label({ children, ...props }) {\n  return (\n    <label className={classes.label} {...props}>\n      {children}\n    </label>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Label);\n","export const normalizeAndSlice = (value, maxLength) => {\n  const removedSpaces = value.replace(/\\s/g, \"\");\n  if (maxLength < 0) return [removedSpaces, \"\"];\n  return [\n    removedSpaces?.substr(0, maxLength),\n    removedSpaces?.substr(maxLength, removedSpaces.length),\n  ];\n};\n\nexport const generateInputs = (name, size) =>\n  [...Array(size)].map((_, index) => ({\n    id: index,\n    name: `${name}[${index}]`,\n  }));\n","import React, { useCallback, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { setCursor } from \"../../../utils/document\";\nimport Label from \"../Label\";\nimport classes from \"./CardNumberField.module.scss\";\nimport { generateInputs, normalizeAndSlice } from \"./helpers\";\n\nconst DEFAULT_MAX_LENGTH = 1;\n\nfunction CardNumberField({ label, name, config, validation, error, control }) {\n  const { maxLength = DEFAULT_MAX_LENGTH } = validation || {};\n  const { register, getValues, setValue } = control;\n\n  const inputs = useMemo(() => generateInputs(name, config?.size), [\n    config,\n    name,\n  ]);\n\n  const getRef = useCallback(\n    (name) => {\n      return control.fieldsRef.current[name]?.ref;\n    },\n    [control]\n  );\n\n  const focusField = useCallback(\n    (name) => {\n      const ref = getRef(name);\n      if (ref) {\n        ref.focus();\n      }\n    },\n    [getRef]\n  );\n\n  const changeValue = useCallback(\n    (name, value) => {\n      const ref = getRef(name);\n      if (ref) {\n        const selectionStart = ref.selectionStart;\n\n        setValue(name, value, {\n          shouldValidate: true,\n        });\n\n        setCursor(document.activeElement, selectionStart);\n      }\n    },\n    [getRef, setValue]\n  );\n\n  const formatInput = useCallback(\n    (id, value, cursorPosition = document.activeElement.selectionStart) => {\n      const name = inputs[id]?.name;\n      const [normalizedValue, rest] = normalizeAndSlice(value, maxLength);\n\n      if (name && normalizedValue) {\n        changeValue(name, normalizedValue);\n        // Only change add rest to next field if cursor is at the end\n        if (cursorPosition >= value.length) {\n          focusField(name);\n          if (rest) {\n            // We need to forwards the cursor position to allow the ovewrite in all the fieds\n            formatInput(id + 1, rest, cursorPosition);\n          }\n        }\n      }\n    },\n    [inputs, maxLength, changeValue, focusField]\n  );\n\n  const removeChar = useCallback(\n    (id, removeFirstChar = false) => {\n      const name = inputs[id]?.name;\n      const value = getValues(name);\n      const newValue = value.substr(\n        ...(removeFirstChar ? [1] : [0, value.length - 1])\n      );\n\n      changeValue(name, newValue);\n      focusField(name);\n\n      if (removeFirstChar) {\n        setCursor(getRef(name), 0);\n      }\n    },\n    [changeValue, focusField, getRef, getValues, inputs]\n  );\n\n  const handleKeyDown = useCallback(\n    ({ id, name }) => (event) => {\n      const value = getValues(name);\n      if (event.key === \"Backspace\" && inputs?.[id - 1]) {\n        setTimeout(() => {\n          const updatedValue = getValues(name);\n          if (updatedValue === value) {\n            removeChar(id - 1);\n          }\n        });\n      } else if (event.key === \"Delete\" && inputs?.[id + 1]) {\n        setTimeout(() => {\n          const updatedValue = getValues(name);\n          if (updatedValue === value) {\n            removeChar(id + 1, true);\n          }\n        });\n      } else if (event.key === \"ArrowLeft\" && inputs?.[id - 1]) {\n        if (document.activeElement.selectionStart === 0) {\n          event.preventDefault();\n          focusField(inputs[id - 1]?.name);\n          setCursor(getRef(inputs[id - 1]?.name), maxLength);\n        }\n      } else if (event.key === \"ArrowRight\" && inputs?.[id + 1]) {\n        if (document.activeElement.selectionEnd === value.length) {\n          event.preventDefault();\n          focusField(inputs[id + 1]?.name);\n          setCursor(getRef(inputs[id + 1]?.name), 0);\n        }\n      }\n    },\n    [focusField, getRef, getValues, inputs, maxLength, removeChar]\n  );\n\n  const handleChange = useCallback(\n    ({ id }) => (event) => {\n      const { value } = event.target;\n      formatInput(id, value);\n    },\n    [formatInput]\n  );\n\n  const handlePaste = useCallback(\n    ({ name }) => () => {\n      setValue(name, \"\");\n    },\n    [setValue]\n  );\n\n  return (\n    <>\n      <Label htmlFor={name}>{label}</Label>\n      <div>\n        {inputs.map(({ id, name }) => (\n          <input\n            key={name}\n            ref={register(validation)}\n            name={name}\n            type=\"tel\"\n            autoComplete=\"off\"\n            className={cx(classes.input, {\n              [classes.valid]: getValues(name) && !error?.[id],\n              [classes.error]: error?.[id],\n            })}\n            onKeyDown={handleKeyDown({ id, name })}\n            onChange={handleChange({ id, name })}\n            onPaste={handlePaste({ id, name })}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default CardNumberField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CardNumberField from \"./fields/CardNumberField\";\nimport { CARD_NUMBER_FIELD } from \"./constants\";\n\nfunction Field({ type, ...config }) {\n  switch (type) {\n    case CARD_NUMBER_FIELD:\n      return <CardNumberField {...config} />;\n\n    default:\n      return null;\n  }\n}\n\nField.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default Field;\n","export const CARD_NUMBER_FIELD = \"CARD_NUMBER_FIELD\";\n","import { CARD_NUMBER_FIELD } from \"../../components/form/constants\";\n\nexport const NUMBER_OF_DIGITS = 4;\n\nconst fields = [\n  {\n    label: \"Card number\",\n    name: \"cardnumber\",\n    type: CARD_NUMBER_FIELD,\n    config: {\n      size: NUMBER_OF_DIGITS,\n    },\n    validation: {\n      required: true,\n      minLength: 4,\n      maxLength: 4,\n      pattern: /\\d/,\n    },\n  },\n];\n\nexport default fields;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Field from \"../../components/form/Field\";\nimport classes from \"./Checkout.module.scss\";\nimport fields from \"./fields\";\n\nfunction Checkout() {\n  const { handleSubmit, errors, formState, reset, control } = useForm({\n    mode: \"onChange\",\n  });\n\n  const onSubmit = (data) => {\n    console.log(\"CardNumber:\", data.cardnumber?.join(\"\"));\n    const ref = control.fieldsRef.current[\"cardnumber[0]\"]?.ref;\n    if (ref) {\n      ref.focus();\n    }\n    reset();\n  };\n\n  return (\n    <div className={classes.container}>\n      <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n        {fields.map((config) => (\n          <Field\n            key={config.name}\n            error={errors?.[config.name]}\n            control={control}\n            {...config}\n          />\n        ))}\n        <br />\n        <small>\n          Try to copy and paste over the fields{\" \"}\n          <span role=\"img\" aria-label=\"magic\">\n            ✨\n          </span>\n        </small>\n        <small>\n          You can use arrows to move between fields{\" \"}\n          <span role=\"img\" aria-label=\"magic\">\n            💎\n          </span>\n        </small>\n        <small>\n          Also use `backspace` and `delete` keys{\" \"}\n          <span role=\"img\" aria-label=\"genius\">\n            🔮\n          </span>\n        </small>\n        <button\n          type=\"submit\"\n          className={classes.button}\n          disabled={!formState.isValid}\n        >\n          Pay\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Checkout;\n","import React from \"react\";\nimport Checkout from \"./containers/checkout-form/Checkout\";\n\nfunction App() {\n  return <Checkout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"CardNumberField_input__9AUES\",\"valid\":\"CardNumberField_valid__261vT\",\"error\":\"CardNumberField_error__eSH3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Checkout_container__1EHtp\",\"form\":\"Checkout_form__2Gf-X\",\"button\":\"Checkout_button__1HAyz\"};"],"sourceRoot":""}